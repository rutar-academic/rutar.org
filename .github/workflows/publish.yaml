name: Build Zola Site

on:
  push:
  schedule:
    - cron: '30 10 * * *'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.1'
          cache: 'pip'
      - name: Install dependencies
        run: python -m pip install -r requirements.txt
      - name: Download papers and notes
        run: python scripts/releases.py
        env:
          GITHUB_TOKEN: ${{ secrets.API_TOKEN_GITHUB }}
      - name: Generate PDF data
        run: python scripts/pdf_data.py
      - name: Organize travel data
        run: python scripts/past_travel.py
      - name: Cache CV build
        uses: actions/cache@v4
        id: cache-cv
        env:
          cache-name: cache-cv
        with:
          path: static/alex_rutar_cv.pdf
          key: cache-cv-${{ hashFiles('data/papers.json', 'data/talks.json', 'data/cv.json', 'cv/*', 'requirements.txt', 'scripts/cv.py') }}
      - if: ${{ steps.cache-cv.outputs.cache-hit != 'true' }}
        name: Generate CV .tex from template
        run: python scripts/cv.py
      - if: ${{ steps.cache-cv.outputs.cache-hit != 'true' }}
        name: Compile LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          work_in_root_file_dir: true
          root_file: "build/alex_rutar_cv.tex"
          post_compile: mv "build/alex_rutar_cv.pdf" "static/"
      - name: Build public HTML with drafts
        uses: shalzz/zola-deploy-action@v0.21.0
        if: github.ref != 'refs/heads/master'
        env:
          BUILD_FLAGS: --drafts
          BUILD_ONLY: true
      - name: Build public HTML
        uses: shalzz/zola-deploy-action@v0.21.0
        if: github.ref == 'refs/heads/master'
        env:
          BUILD_ONLY: true
      - name: Check HTML and CSS
        run: html5validator --root public/ --also-check-css --show-warnings
      - name: Publish to Cloudflare
        uses: cloudflare/wrangler-action@v3
        with:
          command: pages deploy public "--project-name=rutar" "--branch=${{ github.ref_name }}"
          apiToken: ${{ secrets.CF_API_TOKEN }}
